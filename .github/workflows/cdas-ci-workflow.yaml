name: CDAS CI Workflow for Go
run-name: Go Mux application CI
on:
  push:
    branches: 
      - "main"
  pull_request:
    branches: 
      - "main"

env:
  APP_DB_USERNAME: postgres
  APP_DB_PASSWORD: postgres
  APP_DB_NAME: postgres

jobs:
  Build_and_Test:
    runs-on: ubuntu-latest

    services:

      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          - 5433:5432


    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.24

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  trivy-vulnerability-scan:
    needs: Build_and_Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Scan files and IaC for vulnerabilities with Trivy
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        trivy-config: trivy.yaml
  
  sonarqube:
    needs: trivy-vulnerability-scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.1.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
